<?php

/**
 * This is the model base class for the table "produto".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Produto".
 *
 * Columns in table "produto" available as properties of the model,
 * followed by relations of table "produto" available as properties of the model.
 *
 * @property integer $id_produto
 * @property string $codigo
 * @property string $nome
 * @property string $descricao
 * @property string $preco
 * @property integer $quantidade
 * @property integer $promocao
 * @property string $data_cadastro
 * @property integer $id_marca
 * @property integer $id_sub_departamento
 *
 * @property CompraHasProduto[] $compraHasProdutos
 * @property Imagem[] $imagems
 * @property Marca $idMarca
 * @property SubDepartamento $idSubDepartamento
 * @property ProdutoHasEspecificacao[] $produtoHasEspecificacaos
 * @property PromocaoHasProduto[] $promocaoHasProdutos
 */
abstract class BaseProduto extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'produto';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Produto|Produtos', $n);
	}

	public static function representingColumn() {
		return 'nome';
	}

	public function rules() {
		return array(
			array('nome, data_cadastro, id_marca, id_sub_departamento', 'required'),
			array('quantidade, promocao, id_marca, id_sub_departamento', 'numerical', 'integerOnly'=>true),
			array('codigo', 'length', 'max'=>10),
			array('nome', 'length', 'max'=>120),
			array('preco', 'length', 'max'=>5),
			array('descricao', 'safe'),
			array('codigo, descricao, preco, quantidade, promocao', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_produto, codigo, nome, descricao, preco, quantidade, promocao, data_cadastro, id_marca, id_sub_departamento', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'compraHasProdutos' => array(self::HAS_MANY, 'CompraHasProduto', 'id_produto'),
			'imagems' => array(self::HAS_MANY, 'Imagem', 'id_produto'),
			'idMarca' => array(self::BELONGS_TO, 'Marca', 'id_marca'),
			'idSubDepartamento' => array(self::BELONGS_TO, 'SubDepartamento', 'id_sub_departamento'),
			'produtoHasEspecificacaos' => array(self::HAS_MANY, 'ProdutoHasEspecificacao', 'id_produto'),
			'promocaoHasProdutos' => array(self::HAS_MANY, 'PromocaoHasProduto', 'id_produto'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_produto' => Yii::t('app', 'Id Produto'),
			'codigo' => Yii::t('app', 'Codigo'),
			'nome' => Yii::t('app', 'Nome'),
			'descricao' => Yii::t('app', 'Descricao'),
			'preco' => Yii::t('app', 'Preco'),
			'quantidade' => Yii::t('app', 'Quantidade'),
			'promocao' => Yii::t('app', 'Promocao'),
			'data_cadastro' => Yii::t('app', 'Data Cadastro'),
			'id_marca' => null,
			'id_sub_departamento' => null,
			'compraHasProdutos' => null,
			'imagems' => null,
			'idMarca' => null,
			'idSubDepartamento' => null,
			'produtoHasEspecificacaos' => null,
			'promocaoHasProdutos' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_produto', $this->id_produto);
		$criteria->compare('codigo', $this->codigo, true);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('descricao', $this->descricao, true);
		$criteria->compare('preco', $this->preco, true);
		$criteria->compare('quantidade', $this->quantidade);
		$criteria->compare('promocao', $this->promocao);
		$criteria->compare('data_cadastro', $this->data_cadastro, true);
		$criteria->compare('id_marca', $this->id_marca);
		$criteria->compare('id_sub_departamento', $this->id_sub_departamento);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}