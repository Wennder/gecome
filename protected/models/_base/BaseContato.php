<?php

/**
 * This is the model base class for the table "contato".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Contato".
 *
 * Columns in table "contato" available as properties of the model,
 * followed by relations of table "contato" available as properties of the model.
 *
 * @property integer $id_contato
 * @property string $nome
 * @property string $email
 * @property integer $id_telefone
 * @property integer $id_fornecedor
 * @property integer $id_tipo_contato
 *
 * @property Fornecedor $idFornecedor
 * @property Telefone $idTelefone
 * @property TipoContato $idTipoContato
 */
abstract class BaseContato extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'contato';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Contato|Contatos', $n);
	}

	public static function representingColumn() {
		return 'nome';
	}

	public function rules() {
		return array(
			array('id_telefone, id_fornecedor, id_tipo_contato', 'required'),
			array('id_telefone, id_fornecedor, id_tipo_contato', 'numerical', 'integerOnly'=>true),
			array('nome, email', 'length', 'max'=>120),
			array('nome, email', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_contato, nome, email, id_telefone, id_fornecedor, id_tipo_contato', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idFornecedor' => array(self::BELONGS_TO, 'Fornecedor', 'id_fornecedor'),
			'idTelefone' => array(self::BELONGS_TO, 'Telefone', 'id_telefone'),
			'idTipoContato' => array(self::BELONGS_TO, 'TipoContato', 'id_tipo_contato'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_contato' => Yii::t('app', 'Id Contato'),
			'nome' => Yii::t('app', 'Nome'),
			'email' => Yii::t('app', 'Email'),
			'id_telefone' => null,
			'id_fornecedor' => null,
			'id_tipo_contato' => null,
			'idFornecedor' => null,
			'idTelefone' => null,
			'idTipoContato' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_contato', $this->id_contato);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('id_telefone', $this->id_telefone);
		$criteria->compare('id_fornecedor', $this->id_fornecedor);
		$criteria->compare('id_tipo_contato', $this->id_tipo_contato);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}