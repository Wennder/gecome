<?php

/**
 * This is the model base class for the table "departamento_has_fornecedor".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "DepartamentoHasFornecedor".
 *
 * Columns in table "departamento_has_fornecedor" available as properties of the model,
 * followed by relations of table "departamento_has_fornecedor" available as properties of the model.
 *
 * @property integer $id_departamento_has_fornecedor
 * @property integer $id_departamento
 * @property integer $id_fornecedor
 *
 * @property Departamento $idDepartamento
 * @property Fornecedor $idFornecedor
 */
abstract class BaseDepartamentoHasFornecedor extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'departamento_has_fornecedor';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'DepartamentoHasFornecedor|DepartamentoHasFornecedors', $n);
	}

	public static function representingColumn() {
		return 'id_departamento_has_fornecedor';
	}

	public function rules() {
		return array(
			array('id_departamento, id_fornecedor', 'required'),
			array('id_departamento, id_fornecedor', 'numerical', 'integerOnly'=>true),
			array('id_departamento_has_fornecedor, id_departamento, id_fornecedor', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idDepartamento' => array(self::BELONGS_TO, 'Departamento', 'id_departamento'),
			'idFornecedor' => array(self::BELONGS_TO, 'Fornecedor', 'id_fornecedor'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_departamento_has_fornecedor' => Yii::t('app', 'Id Departamento Has Fornecedor'),
			'id_departamento' => null,
			'id_fornecedor' => null,
			'idDepartamento' => null,
			'idFornecedor' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_departamento_has_fornecedor', $this->id_departamento_has_fornecedor);
		$criteria->compare('id_departamento', $this->id_departamento);
		$criteria->compare('id_fornecedor', $this->id_fornecedor);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}